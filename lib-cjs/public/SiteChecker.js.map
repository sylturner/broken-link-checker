{"version":3,"sources":["../../lib/public/SiteChecker.js"],"names":["PAGE_EXCLUSIONS","PAGE_WAS_CHECKED","SiteChecker","SafeEventEmitter","constructor","options","URLCache","maxAge","cacheMaxAge","RequestQueue","maxSockets","rateLimit","on","ITEM_EVENT","url","auth","customData","done","honorRobotExclusions","robots","__cache","emit","ROBOTS_EVENT","REQUEST_QUEUE_END_EVENT","END_EVENT","HtmlUrlChecker","ERROR_EVENT","error","HTML_EVENT","tree","response","pageURL","set","redirects","forEach","redirect","QUEUE_EVENT","JUNK_EVENT","result","LINK_EVENT","PAGE_EVENT","length","SITE_EVENT","clearCache","dequeue","id","success","enqueue","firstPageURL","transitive","has","isPaused","numActiveLinks","numQueuedLinks","numPages","numSites","pause","resume","link","get","IS_INTERNAL","rebasedPathname","REBASED_URL","pathname","isAllowed","userAgent","WAS_EXCLUDED","includes","EXCLUDED_REASON","tagGroup","tags","recursive","filterLevel","HTML_TAG_NAME","attrSupported","HTML_ATTR_NAME","rebasedURL","redirectedURL","REDIRECTED_URL","IS_BROKEN","HTTP_RESPONSE","includePage","includeLink","excludedReason","undefined","clear"],"mappings":"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","sourcesContent":["import {END_EVENT, ERROR_EVENT, HTML_EVENT, JUNK_EVENT, LINK_EVENT, PAGE_EVENT, QUEUE_EVENT, ROBOTS_EVENT, SITE_EVENT} from \"../internal/events\";\nimport {EXCLUDED_REASON, HTML_ATTR_NAME, HTML_TAG_NAME, HTTP_RESPONSE, IS_BROKEN, IS_INTERNAL, REBASED_URL, REDIRECTED_URL, WAS_EXCLUDED} from \"../internal/Link\";\nimport getRobotsTxt from \"../internal/getRobotsTxt\";\nimport HtmlUrlChecker from \"./HtmlUrlChecker\";\nimport parseOptions from \"../internal/parseOptions\";\nimport RequestQueue, {ITEM_EVENT, END_EVENT as REQUEST_QUEUE_END_EVENT} from \"limited-request-queue\";\nimport SafeEventEmitter from \"../internal/SafeEventEmitter\";\nimport transitiveAuth from \"../internal/transitiveAuth\";\nimport URLCache from \"urlcache\";\n\n\n\n// @todo BLC_ROBOTS catches rel=nofollow links but will also catch meta/header excluded links -- fine?\nconst PAGE_EXCLUSIONS = [\"BLC_KEYWORD\", \"BLC_ROBOTS\", \"BLC_SCHEME\"];\n\nconst PAGE_WAS_CHECKED = true;\n\n\n\nexport default class SiteChecker extends SafeEventEmitter\n{\n\t#currentAuth;\n\t#currentCustomData;\n\t#currentDone;\n\t#currentPageError;\n\t#currentRobotsTxt;\n\t#currentSiteURL;\n\t#htmlUrlChecker;\n\t#options;\n\t#sitePagesChecked;\n\t#siteUrlQueue;\n\n\n\n\tconstructor(options)\n\t{\n\t\tsuper();\n\t\tthis.#options = this.#overrideOptions(parseOptions(options)); // @todo https://github.com/tc39/proposal-pipeline-operator\n\t\tthis.#sitePagesChecked = new URLCache({ maxAge: this.#options.cacheMaxAge });\n\t\tthis.#reset();\n\n\t\tthis.#siteUrlQueue = new RequestQueue(\n\t\t{\n\t\t\tmaxSockets: 1,\n\t\t\trateLimit: this.#options.rateLimit\n\t\t})\n\t\t.on(ITEM_EVENT, async (url, {auth, customData}, done) =>\n\t\t{\n\t\t\tthis.#reset();\n\n\t\t\tthis.#currentAuth = auth;\n\t\t\tthis.#currentCustomData = customData;\n\t\t\tthis.#currentDone = done;\n\t\t\tthis.#currentSiteURL = url;  // @todo strip after hostname?\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (this.#options.honorRobotExclusions)\n\t\t\t\t{\n\t\t\t\t\tconst robots = await getRobotsTxt(this.#currentSiteURL, this.#currentAuth, this.__cache, this.#options);\n\n\t\t\t\t\t// This receives an instance even if no robots.txt was found\n\t\t\t\t\tthis.#currentRobotsTxt = robots;\n\n\t\t\t\t\tthis.emit(ROBOTS_EVENT, robots, this.#currentCustomData);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\t// If could not connect to server -- let `HtmlUrlChecker` catch it\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tthis.#enqueuePage(this.#currentSiteURL, this.#currentCustomData, this.#currentAuth);\n\t\t\t}\n\t\t})\n\t\t.on(REQUEST_QUEUE_END_EVENT, () =>\n\t\t{\n\t\t\t// Clear references for garbage collection\n\t\t\tthis.#reset();\n\n\t\t\tthis.emit(END_EVENT);\n\t\t});\n\n\t\tthis.#htmlUrlChecker = new HtmlUrlChecker(this.#options)\n\t\t.on(ERROR_EVENT, error => this.emit(ERROR_EVENT, error))\n\t\t.on(HTML_EVENT, (tree, robots, response, pageURL, customData) =>\n\t\t{\n\t\t\t// If was redirected\n\t\t\tif (response.url !== pageURL)\n\t\t\t{\n\t\t\t\tthis.#sitePagesChecked.set(response.url, PAGE_WAS_CHECKED);\n\n\t\t\t\t// Avoid rechecking any redirected pages\n\t\t\t\tresponse.redirects.forEach(redirect => this.#sitePagesChecked.set(redirect.url, PAGE_WAS_CHECKED));\n\t\t\t}\n\n\t\t\tthis.emit(HTML_EVENT, tree, robots, response, pageURL, customData);\n\t\t})\n\t\t.on(QUEUE_EVENT, () => this.emit(QUEUE_EVENT))\n\t\t.on(JUNK_EVENT, (result, customData) =>\n\t\t{\n\t\t\tthis.emit(JUNK_EVENT, result, customData);\n\n\t\t\tthis.#maybeEnqueuePage(result, customData, this.#currentAuth);\n\t\t})\n\t\t.on(LINK_EVENT, (result, customData) =>\n\t\t{\n\t\t\tthis.emit(LINK_EVENT, result, customData);\n\n\t\t\tthis.#maybeEnqueuePage(result, customData, this.#currentAuth);\n\t\t})\n\t\t.on(PAGE_EVENT, (error, pageURL, customData) =>\n\t\t{\n\t\t\tthis.emit(PAGE_EVENT, error, pageURL, customData);\n\n\t\t\t// Only the first page should supply an error to SITE_EVENT\n\t\t\tif (this.#sitePagesChecked.length <= 1)\n\t\t\t{\n\t\t\t\tthis.#currentPageError = error;\n\t\t\t}\n\t\t})\n\t\t.on(END_EVENT, () =>\n\t\t{\n\t\t\tthis.emit(SITE_EVENT, this.#currentPageError, this.#currentSiteURL, this.#currentCustomData);\n\n\t\t\t// Auto-starts next site, if any\n\t\t\t// Emits REQUEST_QUEUE_END_EVENT, if not\n\t\t\tthis.#currentDone();\n\t\t});\n\t}\n\n\n\n\tclearCache()\n\t{\n\t\t// Does not clear `sitePagesChecked` because it would mess up any current scans\n\t\tthis.#htmlUrlChecker.clearCache();\n\t\treturn this;\n\t}\n\n\n\n\tdequeue(id)\n\t{\n\t\tconst success = this.#siteUrlQueue.dequeue(id);\n\n\t\tthis.emit(QUEUE_EVENT);\n\n\t\treturn success;\n\t}\n\n\n\n\tenqueue(firstPageURL, customData)\n\t{\n\t\tconst transitive = transitiveAuth(firstPageURL);\n\n\t\tconst success = this.#siteUrlQueue.enqueue(transitive.url, { auth:transitive.auth, customData });\n\n\t\tthis.emit(QUEUE_EVENT);\n\n\t\treturn success;\n\t}\n\n\n\n\t/**\n\t * Enqueue a URL to be crawled.\n\t * @param {URL} url\n\t * @param {*} customData\n\t * @param {object} auth\n\t */\n\t#enqueuePage(url, customData, auth)\n\t{\n\t\t// Avoid links to self within page\n\t\tthis.#sitePagesChecked.set(url, PAGE_WAS_CHECKED);\n\n\t\tthis.#htmlUrlChecker.enqueue(url, customData, auth);\n\t}\n\n\n\n\t/**\n\t * Determine whether a Link should be excluded from checks, and the reason for such.\n\t * @param {Link} link\n\t * @returns {string|undefined}\n\t */\n\t#getExcludedReason(link)\n\t{\n\t\tif (link.get(IS_INTERNAL) && !this.#isAllowed(link))\n\t\t{\n\t\t\treturn \"BLC_ROBOTS\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Not excluded\n\t\t}\n\t}\n\n\n\n\thas(id)\n\t{\n\t\treturn this.#siteUrlQueue.has(id);\n\t}\n\n\n\n\t/**\n\t * Determine whether a Link should be included, conforming to any robots filter.\n\t * @param {Link} link\n\t * @returns {boolean}\n\t */\n\t#isAllowed(link)\n\t{\n\t\tif (this.#options.honorRobotExclusions)\n\t\t{\n\t\t\tconst rebasedPathname = link.get(REBASED_URL)?.pathname;\n\n\t\t\t// @todo remove condition when/if `Link::invalidate()` is used in `HtmlChecker`\n\t\t\tif (rebasedPathname !== null)\n\t\t\t{\n\t\t\t\treturn this.#currentRobotsTxt.isAllowed(this.#options.userAgent, rebasedPathname);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\n\n\tget isPaused()\n\t{\n\t\treturn this.#htmlUrlChecker.isPaused;\n\t}\n\n\n\n\t/**\n\t * Enqueue a page (to be crawled) if it passes filters.\n\t * @param {Link} link\n\t * @param {*} customData\n\t * @param {object} auth\n\t */\n\t#maybeEnqueuePage(link, customData, auth)\n\t{\n\t\t// Skip specific links that were excluded from checks\n\t\tif (link.get(WAS_EXCLUDED) && PAGE_EXCLUSIONS.includes(link.get(EXCLUDED_REASON)))\n\t\t{\n\t\t\t// do nothing\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst tagGroup = this.#options.tags.recursive[this.#options.filterLevel][link.get(HTML_TAG_NAME)] ?? {};\n\t\t\tconst attrSupported = link.get(HTML_ATTR_NAME) in tagGroup;\n\t\t\tconst rebasedURL = link.get(REBASED_URL);\n\t\t\tconst redirectedURL = link.get(REDIRECTED_URL);\n\n\t\t\tif (\n\t\t\t   \t!attrSupported ||\n\t\t\t   \tlink.get(IS_BROKEN) ||\n\t\t\t   \t!link.get(IS_INTERNAL) ||\n\t\t\t   \tthis.#sitePagesChecked.has(rebasedURL) ||\n\t\t\t   \t!this.#isAllowed(link)\n\t\t\t   )\n\t\t\t{\n\t\t\t\t// do nothing\n\t\t\t}\n\t\t\telse if (redirectedURL !== null)\n\t\t\t{\n\t\t\t\t// Because only the final redirected page needs to be [recursively] checked,\n\t\t\t\t// all redirects are stored as pages that have been checked\n\t\t\t\tlink.get(HTTP_RESPONSE).redirects.forEach(({url}) => this.#sitePagesChecked.set(url, PAGE_WAS_CHECKED));\n\n\t\t\t\tif (!this.#sitePagesChecked.has(redirectedURL))\n\t\t\t\t{\n\t\t\t\t\tthis.#enqueuePage(redirectedURL, customData, auth);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.#options.includePage(rebasedURL))\n\t\t\t{\n\t\t\t\tthis.#enqueuePage(rebasedURL, customData, auth);\n\t\t\t}\n\t\t}\n\t}\n\n\n\n\tget numActiveLinks()\n\t{\n\t\treturn this.#htmlUrlChecker.numActiveLinks;\n\t}\n\n\n\n\tget numQueuedLinks()\n\t{\n\t\treturn this.#htmlUrlChecker.numQueuedLinks;\n\t}\n\n\n\n\tget numPages()\n\t{\n\t\treturn this.#htmlUrlChecker.numPages;\n\t}\n\n\n\n\tget numSites()\n\t{\n\t\treturn this.#siteUrlQueue.length;\n\t}\n\n\n\n\t/**\n\t * Override/mutate some options for extended behavior.\n\t * @param {object} options\n\t * @returns {object}\n\t */\n\t#overrideOptions(options)\n\t{\n\t\tconst {includeLink} = options;\n\n\t\toptions.includeLink = link =>\n\t\t{\n\t\t\tconst excludedReason = this.#getExcludedReason(link);\n\n\t\t\tif (excludedReason === undefined)\n\t\t\t{\n\t\t\t\treturn includeLink(link);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Undocumented return value type\n\t\t\t\treturn excludedReason;\n\t\t\t}\n\t\t};\n\n\t\treturn options;\n\t}\n\n\n\n\tpause()\n\t{\n\t\tthis.#htmlUrlChecker.pause();\n\t\tthis.#siteUrlQueue.pause();\n\t\treturn this;\n\t}\n\n\n\n\t#reset()\n\t{\n\t\tthis.#currentAuth = null;\n\t\tthis.#currentCustomData = null;\n\t\tthis.#currentDone = null;\n\t\tthis.#currentPageError = null;\n\t\tthis.#currentRobotsTxt = null;\n\t\tthis.#currentSiteURL = null;\n\t\tthis.#sitePagesChecked.clear();\n\t}\n\n\n\n\tresume()\n\t{\n\t\tthis.#htmlUrlChecker.resume();\n\t\tthis.#siteUrlQueue.resume();\n\t\treturn this;\n\t}\n\n\n\n\t// Useless, but consistent with other classes\n\tget __cache()\n\t{\n\t\treturn this.#htmlUrlChecker.__cache;\n\t}\n}\n"],"file":"SiteChecker.js"}