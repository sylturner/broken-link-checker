{"version":3,"sources":["../../lib/public/HtmlUrlChecker.js"],"names":["HtmlUrlChecker","SafeEventEmitter","constructor","options","RequestQueue","maxSockets","rateLimit","on","ITEM_EVENT","url","auth","customData","done","response","stream","__cache","RobotDirectives","userAgent","scan","error","REQUEST_QUEUE_END_EVENT","emit","END_EVENT","HtmlChecker","ERROR_EVENT","HTML_EVENT","tree","robots","QUEUE_EVENT","JUNK_EVENT","result","LINK_EVENT","COMPLETE_EVENT","clearCache","dequeue","id","success","enqueue","pageURL","transitive","has","isPaused","numActiveLinks","numPages","length","numQueuedLinks","pause","resume","xRobotsTag","headers","header","PAGE_EVENT"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIe,MAAMA,cAAN,SAA6BC,yBAA7B,CACf;AAaCC,EAAAA,WAAW,CAACC,OAAD,EACX;AACC;;AADD;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAEC;;AAEA,0CAAgB,2BAAaA,OAAb,CAAhB;;AAEA,+CAAqB,IAAIC,4BAAJ,CACrB;AACCC,MAAAA,UAAU,EAAE,CADb;AAECC,MAAAA,SAAS,EAAE,sCAAcA;AAF1B,KADqB,EAKpBC,EALoB,CAKjBC,+BALiB,EAKL,OAAOC,GAAP,EAAY;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAZ,EAAgCC,IAAhC,KAChB;AACC;;AAEA,gDAAoBF,IAApB;;AACA,sDAA0BC,UAA1B;;AACA,gDAAoBC,IAApB;;AACA,mDAAuBH,GAAvB,EAND,CAM8B;;;AAE7B,UACA;AACC,cAAM;AAACI,UAAAA,QAAD;AAAWC,UAAAA;AAAX,YAAqB,MAAM,+CAAW,IAAX,0CAAiC,IAAjC,iBAAoD,KAAKC,OAAzD,wBAAkE,IAAlE,YAAjC;;AAEA,sDAAwBF,QAAxB;;AACA,oDAAsB,IAAIG,wBAAJ,CAAoB;AAAEC,UAAAA,SAAS,EAAE,sCAAcA;AAA3B,SAApB,CAAtB;;AAEA,2FAND,CAQC;AACA;;;AACA,cAAM,0CAAkBC,IAAlB,CAAuBJ,MAAvB,EAA+BD,QAAQ,CAACJ,GAAxC,wBAA6C,IAA7C,yCAAkE,IAAlE,gBAAN;AACA,OAZD,CAaA,OAAOU,KAAP,EACA;AACC,iFAAoBA,KAApB;AACA;AACD,KA/BoB,EAgCpBZ,EAhCoB,CAgCjBa,8BAhCiB,EAgCQ,MAC7B;AACC;AACA;;AAEA,WAAKC,IAAL,CAAUC,iBAAV;AACA,KAtCoB,CAArB;;AAwCA,8CAAoB,IAAIC,oBAAJ,uBAAgB,IAAhB,aACnBhB,EADmB,CAChBiB,mBADgB,EACHL,KAAK,IAAI,KAAKE,IAAL,CAAUG,mBAAV,EAAuBL,KAAvB,CADN,EAEnBZ,EAFmB,CAEhBkB,kBAFgB,EAEJ,CAACC,IAAD,EAAOC,MAAP,KAChB;AACC,WAAKN,IAAL,CAAUI,kBAAV,EAAsBC,IAAtB,EAA4BC,MAA5B,wBAAoC,IAApC,2CAA2D,IAA3D,0CAAiF,IAAjF;AACA,KALmB,EAMnBpB,EANmB,CAMhBqB,mBANgB,EAMH,MAAM,KAAKP,IAAL,CAAUO,mBAAV,CANH,EAOnBrB,EAPmB,CAOhBsB,kBAPgB,EAOJC,MAAM,IAAI,KAAKT,IAAL,CAAUQ,kBAAV,EAAsBC,MAAtB,wBAA8B,IAA9B,sBAPN,EAQnBvB,EARmB,CAQhBwB,kBARgB,EAQJD,MAAM,IAAI,KAAKT,IAAL,CAAUU,kBAAV,EAAsBD,MAAtB,wBAA8B,IAA9B,sBARN,EASnBvB,EATmB,CAShByB,sBATgB,EASA,6BAAM,IAAN,wCAAM,IAAN,CATA,CAApB;AAUA;AAID;;;;;AAgBAC,EAAAA,UAAU,GACV;AACC,8CAAkBA,UAAlB;;AACA,WAAO,IAAP;AACA;AAID;;;;;;AAiBAC,EAAAA,OAAO,CAACC,EAAD,EACP;AACC,UAAMC,OAAO,GAAG,2CAAmBF,OAAnB,CAA2BC,EAA3B,CAAhB;;AAEA,SAAKd,IAAL,CAAUO,mBAAV;AAEA,WAAOQ,OAAP;AACA,GA1HF,CA8HC;;;AACAC,EAAAA,OAAO,CAACC,OAAD,EAAU3B,UAAV,EAAsBD,IAAtB,EACP;AACC;AACA,UAAM6B,UAAU,GAAG,6BAAeD,OAAf,EAAwB5B,IAAxB,CAAnB;;AAEA,UAAMyB,EAAE,GAAG,2CAAmBE,OAAnB,CAA2BE,UAAU,CAAC9B,GAAtC,EAA2C;AAAEC,MAAAA,IAAI,EAAC6B,UAAU,CAAC7B,IAAlB;AAAwBC,MAAAA;AAAxB,KAA3C,CAAX;;AAEA,SAAKU,IAAL,CAAUO,mBAAV;AAEA,WAAOO,EAAP;AACA;;AAIDK,EAAAA,GAAG,CAACL,EAAD,EACH;AACC,WAAO,2CAAmBK,GAAnB,CAAuBL,EAAvB,CAAP;AACA;;AAID,MAAIM,QAAJ,GACA;AACC,WAAO,0CAAkBA,QAAzB;AACA;;AAID,MAAIC,cAAJ,GACA;AACC,WAAO,0CAAkBA,cAAzB;AACA;;AAID,MAAIC,QAAJ,GACA;AACC,WAAO,2CAAmBC,MAA1B;AACA;;AAID,MAAIC,cAAJ,GACA;AACC,WAAO,0CAAkBA,cAAzB;AACA;;AAIDC,EAAAA,KAAK,GACL;AACC,8CAAkBA,KAAlB;;AACA,+CAAmBA,KAAnB;;AACA,WAAO,IAAP;AACA;;AAgBDC,EAAAA,MAAM,GACN;AACC,8CAAkBA,MAAlB;;AACA,+CAAmBA,MAAnB;;AACA,WAAO,IAAP;AACA;;AAID,MAAIhC,OAAJ,GACA;AACC,WAAO,0CAAkBA,OAAzB;AACA;;AAjNF;;;;2DA8EC;AACC,QAAMiC,UAAU,GAAG,8CAAsBC,OAAtB,CAA8B,cAA9B,CAAnB,CADD,CAGC;;;AACA,MAAID,UAAU,IAAI,IAAlB,EACA;AACC,gDAAoBE,MAApB,CAA2BF,UAA3B;AACA;AACD,C;;+CAgBc7B,KAAK,GAAG,I,EACvB;AACC;AACA;AACA,OAAKE,IAAL,CAAU8B,kBAAV,EAAsBhC,KAAtB,wBAA6B,IAA7B,0CAAmD,IAAnD,uBAHD,CAKC;AACA;;AACA;AACA,C;;iCA2ED;AACC,4CAAoB,IAApB;;AACA,kDAA0B,IAA1B;;AACA,4CAAoB,IAApB;;AACA,+CAAuB,IAAvB;;AACA,gDAAwB,IAAxB;;AACA,8CAAsB,IAAtB;AACA,C","sourcesContent":["import {COMPLETE_EVENT, END_EVENT, ERROR_EVENT, HTML_EVENT, JUNK_EVENT, LINK_EVENT, PAGE_EVENT, QUEUE_EVENT} from \"../internal/events\";\nimport HtmlChecker from \"./HtmlChecker\";\nimport parseOptions from \"../internal/parseOptions\";\nimport RequestQueue, {ITEM_EVENT, END_EVENT as REQUEST_QUEUE_END_EVENT} from \"limited-request-queue\";\nimport RobotDirectives from \"robot-directives\";\nimport SafeEventEmitter from \"../internal/SafeEventEmitter\";\nimport streamHTML from \"../internal/streamHTML\";\nimport transitiveAuth from \"../internal/transitiveAuth\";\n\n\n\nexport default class HtmlUrlChecker extends SafeEventEmitter\n{\n\t#currentAuth;\n\t#currentCustomData;\n\t#currentDone;\n\t#currentPageURL;\n\t#currentResponse;\n\t#currentRobots;\n\t#htmlChecker;\n\t#htmlUrlQueue;\n\t#options;\n\n\n\n\tconstructor(options)\n\t{\n\t\tsuper();\n\t\tthis.#reset();\n\n\t\tthis.#options = parseOptions(options);\n\n\t\tthis.#htmlUrlQueue = new RequestQueue(\n\t\t{\n\t\t\tmaxSockets: 1,\n\t\t\trateLimit: this.#options.rateLimit\n\t\t})\n\t\t.on(ITEM_EVENT, async (url, {auth, customData}, done) =>\n\t\t{\n\t\t\tthis.#reset();\n\n\t\t\tthis.#currentAuth = auth;\n\t\t\tthis.#currentCustomData = customData;\n\t\t\tthis.#currentDone = done;\n\t\t\tthis.#currentPageURL = url;  // @todo remove hash ?\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tconst {response, stream} = await streamHTML(this.#currentPageURL, this.#currentAuth, this.__cache, this.#options);\n\n\t\t\t\tthis.#currentResponse = response;\n\t\t\t\tthis.#currentRobots = new RobotDirectives({ userAgent: this.#options.userAgent });\n\n\t\t\t\tthis.#appendRobotHeaders();\n\n\t\t\t\t// Passes robots instance so that headers are included in robot exclusion checks\n\t\t\t\t// @todo does the `await` cause `completedPage` to be called twice (other's in COMPLETE_EVENT) if error occurs?\n\t\t\t\tawait this.#htmlChecker.scan(stream, response.url, this.#currentRobots, this.#currentAuth);\n\t\t\t}\n\t\t\tcatch (error)\n\t\t\t{\n\t\t\t\tthis.#completedPage(error);\n\t\t\t}\n\t\t})\n\t\t.on(REQUEST_QUEUE_END_EVENT, () =>\n\t\t{\n\t\t\t// Clear references for garbage collection\n\t\t\tthis.#reset();\n\n\t\t\tthis.emit(END_EVENT);\n\t\t});\n\n\t\tthis.#htmlChecker = new HtmlChecker(this.#options)\n\t\t.on(ERROR_EVENT, error => this.emit(ERROR_EVENT, error))\n\t\t.on(HTML_EVENT, (tree, robots) =>\n\t\t{\n\t\t\tthis.emit(HTML_EVENT, tree, robots, this.#currentResponse, this.#currentPageURL, this.#currentCustomData);\n\t\t})\n\t\t.on(QUEUE_EVENT, () => this.emit(QUEUE_EVENT))\n\t\t.on(JUNK_EVENT, result => this.emit(JUNK_EVENT, result, this.#currentCustomData))\n\t\t.on(LINK_EVENT, result => this.emit(LINK_EVENT, result, this.#currentCustomData))\n\t\t.on(COMPLETE_EVENT, () => this.#completedPage());\n\t}\n\n\n\n\t/**\n\t * Append any robot headers.\n\t */\n\t#appendRobotHeaders()\n\t{\n\t\tconst xRobotsTag = this.#currentResponse.headers[\"x-robots-tag\"];\n\n\t\t// @todo https://github.com/nodejs/node/issues/3591\n\t\tif (xRobotsTag != null)\n\t\t{\n\t\t\tthis.#currentRobots.header(xRobotsTag);\n\t\t}\n\t}\n\n\n\n\tclearCache()\n\t{\n\t\tthis.#htmlChecker.clearCache();\n\t\treturn this;\n\t}\n\n\n\n\t/**\n\t * Emit PAGE_EVENT and continue the queue.\n\t * @param {Error} [error]\n\t */\n\t#completedPage(error = null)\n\t{\n\t\t// @todo emit page error instead?\n\t\t// @todo include redirected url if there is one?\n\t\tthis.emit(PAGE_EVENT, error, this.#currentPageURL, this.#currentCustomData);\n\n\t\t// Auto-starts next queue item, if any\n\t\t// Emits REQUEST_QUEUE_END_EVENT, if not\n\t\tthis.#currentDone();\n\t}\n\n\n\n\tdequeue(id)\n\t{\n\t\tconst success = this.#htmlUrlQueue.dequeue(id);\n\n\t\tthis.emit(QUEUE_EVENT);\n\n\t\treturn success;\n\t}\n\n\n\n\t// `auth` is undocumented and for internal use only\n\tenqueue(pageURL, customData, auth)\n\t{\n\t\t// @todo this could get messy if there're many different credentials per site (if we cache based on headers)\n\t\tconst transitive = transitiveAuth(pageURL, auth);\n\n\t\tconst id = this.#htmlUrlQueue.enqueue(transitive.url, { auth:transitive.auth, customData });\n\n\t\tthis.emit(QUEUE_EVENT);\n\n\t\treturn id;\n\t}\n\n\n\n\thas(id)\n\t{\n\t\treturn this.#htmlUrlQueue.has(id);\n\t}\n\n\n\n\tget isPaused()\n\t{\n\t\treturn this.#htmlChecker.isPaused;\n\t}\n\n\n\n\tget numActiveLinks()\n\t{\n\t\treturn this.#htmlChecker.numActiveLinks;\n\t}\n\n\n\n\tget numPages()\n\t{\n\t\treturn this.#htmlUrlQueue.length;\n\t}\n\n\n\n\tget numQueuedLinks()\n\t{\n\t\treturn this.#htmlChecker.numQueuedLinks;\n\t}\n\n\n\n\tpause()\n\t{\n\t\tthis.#htmlChecker.pause();\n\t\tthis.#htmlUrlQueue.pause();\n\t\treturn this;\n\t}\n\n\n\n\t#reset()\n\t{\n\t\tthis.#currentAuth = null;\n\t\tthis.#currentCustomData = null;\n\t\tthis.#currentDone = null;\n\t\tthis.#currentPageURL = null;\n\t\tthis.#currentResponse = null;\n\t\tthis.#currentRobots = null;\n\t}\n\n\n\n\tresume()\n\t{\n\t\tthis.#htmlChecker.resume();\n\t\tthis.#htmlUrlQueue.resume();\n\t\treturn this;\n\t}\n\n\n\n\tget __cache()\n\t{\n\t\treturn this.#htmlChecker.__cache;\n\t}\n}\n"],"file":"HtmlUrlChecker.js"}