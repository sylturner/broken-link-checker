{"version":3,"sources":["../lib/cli.js"],"names":["title","checker","checkerOptions","gauge","keyScanner","logOptions","pauseMessage","spinner","stats","urls","argsToOptions","args","renames","exclude","excludeExternal","excludeInternal","follow","hostRequests","include","ordered","requests","Object","entries","reduce","opts","argName","argValue","DEFAULT_OPTIONS","get","requestMethod","GET_METHOD","log","hide","console","show","logPage","pageURL","logPageMetrics","output","page","totalLinks","skippedLinks","brokenLinks","logProgress","links","numActiveLinks","numQueuedLinks","pageCompletion","recursive","numPages","numSites","logResult","result","displayed","link","IS_BROKEN","WAS_EXCLUDED","REBASED_URL","ORIGINAL_URL","BROKEN_REASON","EXCLUDED_REASON","HTTP_RESPONSE_WAS_CACHED","logResults","results","currentIndex","undefined","logSite","site","totalPages","logSiteMetrics","broken","red","green","gray","Date","now","startTime","largest","round","separator","repeat","split","length","run","values","gaugeThemes","forEach","theme","preSubsection","Gauge","Statistics","SiteChecker","HtmlUrlChecker","on","HTML_EVENT","tree","robots","response","QUEUE_EVENT","JUNK_EVENT","pushResult","LINK_EVENT","PAGE_EVENT","error","code","name","message","process","exitCode","resetPage","SITE_EVENT","resetSite","END_EVENT","clearTimeout","disable","release","notifier","notify","ERROR_EVENT","exit","togglePause","key","parsed","pause","url","enqueue","URL","resume","spinnerInterval","setTimeout","pulse","constructor","hideCachedLink","hideCachedLinks","hideSkippedLink","hideSkippedLinks","hideUnbrokenLink","hideUnbrokenLinks","hiddenLinks","maintainLinkOrder","HTML_INDEX","push","isPaused","argv","filterLevel","join","verbosity","optionator","require","prepend","toUpperCase","append","options","heading","option","alias","type","description","default","maxSocketsPerHost","maxSockets","parseArgv","parse","Error","help","generateHelp","version","packageVersion","_"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport {BROKEN_REASON, EXCLUDED_REASON, HTML_INDEX, HTTP_RESPONSE_WAS_CACHED, IS_BROKEN, ORIGINAL_URL, REBASED_URL, WAS_EXCLUDED} from \"./internal/Link\";\nimport DEFAULT_OPTIONS from \"./internal/defaultOptions\";\nimport {END_EVENT, ERROR_EVENT, HTML_EVENT, JUNK_EVENT, LINK_EVENT, PAGE_EVENT, QUEUE_EVENT, SITE_EVENT} from \"./internal/events\";\nimport Gauge from \"gauge\";\nimport {GET_METHOD} from \"./internal/methods\";\nimport {gray, green, red, white, yellow} from \"chalk\";\nimport {HtmlUrlChecker, SiteChecker} from \"./\";\nimport humanizeDuration from \"humanize-duration\";\nimport longest from \"longest\";\nimport {make_scanner as scanKeys} from \"keyscan\";\nimport notifier from \"node-notifier\";\nimport stripAnsi from \"strip-ansi\";\nimport supportsSemigraphics from \"supports-semigraphics\";\nimport {themes as gaugeThemes} from \"gauge/themes\";\nimport {version as packageVersion} from \"../package.json\";\n\n\n\nconst title = \"Broken Link Checker\";\nlet checker,checkerOptions,gauge,keyScanner,logOptions,pauseMessage,spinner,stats,urls;\n\n\n\nconst argsToOptions = args =>\n{\n\tconst renames =\n\t{\n\t\texclude: \"excludedKeywords\",\n\t\texcludeExternal: \"excludeExternalLinks\",\n\t\texcludeInternal: \"excludeInternalLinks\",\n\t\tfollow: \"followRobotExclusions\",\n\t\thostRequests: \"maxSocketsPerHost\",\n\t\tinclude: \"includedKeywords\",\n\t\tordered: \"maintainLinkOrder\",\n\t\trequests: \"maxSockets\"\n\t};\n\n\treturn Object.entries(args).reduce((opts, [argName, argValue]) =>\n\t{\n\t\tif (argName in renames)\n\t\t{\n\t\t\topts[ renames[argName] ] = argValue;\n\t\t}\n\t\telse if (argName in DEFAULT_OPTIONS)\n\t\t{\n\t\t\topts[argName] = argValue;\n\t\t}\n\t\telse if (args.get)\n\t\t{\n\t\t\topts.requestMethod = GET_METHOD;\n\t\t}\n\n\t\treturn opts;\n\t}, {});\n};\n\n\n\nconst log = (...args) =>\n{\n\t// Avoid spinner/progress chars getting stuck in the log\n\tgauge.hide();\n\n\tconsole.log(...args);\n\n\tgauge.show();\n};\n\n\n\nconst logPage = pageURL =>\n{\n\tlog(`${white(\"\\nGetting links from:\")} ${yellow(pageURL)}`);\n};\n\n\n\nconst logPageMetrics = () =>\n{\n\tlet output = gray(`Finished! ${stats.page.totalLinks} links found.`);\n\n\tif (stats.page.skippedLinks > 0)\n\t{\n\t\toutput += gray(` ${stats.page.skippedLinks} skipped.`);\n\t}\n\n\tif (stats.page.totalLinks > 0)\n\t{\n\t\toutput += gray(\" \");\n\n\t\tif (stats.page.brokenLinks > 0)\n\t\t{\n\t\t\toutput += red(`${stats.page.brokenLinks} broken`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput += green(`${stats.page.brokenLinks} broken`);\n\t\t}\n\n\t\toutput += gray(\".\");\n\t}\n\n\tlog(output);\n};\n\n\n\nconst logProgress = () =>\n{\n\tconst links = checker.numActiveLinks + checker.numQueuedLinks;\n\n\tconst pageCompletion = links>0 ? 1/links : 0;\n\n\tif (logOptions.recursive)\n\t{\n\t\tgauge.show(`Links:${links} Pages:${checker.numPages} Sites:${checker.numSites}`, pageCompletion);\n\t}\n\telse\n\t{\n\t\tgauge.show(`Links:${links} Pages:${checker.numPages}`, pageCompletion);\n\t}\n};\n\n\n\nconst logResult = /*(*/result/*, finalResult)*/ =>\n{\n\tif (result.displayed)\n\t{\n\t\t// @todo if the last result is skipped, the last RENDERED result will not be \"└─\"\n\t\tlet output = gray( /*finalResult!==true ?*/ \"├─\" /*: \"└─\"*/ );\n\n\t\tconst {link} = result;\n\n\t\tif (link.get(IS_BROKEN))\n\t\t{\n\t\t\toutput += red(\"BROKEN\");\n\t\t\toutput += gray(\"─ \");\n\t\t}\n\t\telse if (link.get(WAS_EXCLUDED))\n\t\t{\n\t\t\toutput += gray(\"─SKIP── \");\n\t\t}\n\t\telse\n\t\t{\n\t\t\toutput += gray(\"──\");\n\t\t\toutput += green(\"OK\");\n\t\t\toutput += gray(\"─── \");\n\t\t}\n\n\t\t// @todo is ORIGINAL_URL only for invalid links?\n\t\toutput += yellow( link.get(REBASED_URL) ?? link.get(ORIGINAL_URL) );\n\n\t\tif (link.get(IS_BROKEN))\n\t\t{\n\t\t\toutput += gray(` (${link.get(BROKEN_REASON)})`);\n\t\t}\n\t\telse if (link.get(WAS_EXCLUDED))\n\t\t{\n\t\t\toutput += gray(` (${link.get(EXCLUDED_REASON)})`);\n\t\t}\n\t\t// Don't display cached message if broken/excluded message is displayed\n\t\telse if (link.get(HTTP_RESPONSE_WAS_CACHED))\n\t\t{\n\t\t\toutput += gray(\" (CACHED)\");\n\t\t}\n\n\t\tlog(output);\n\t}\n};\n\n\n\n/**\n * Logs links in the order that they are found in their containing HTML\n * document, even if later links receive an earlier response.\n */\nconst logResults = () =>\n{\n\t// eslint-disable-next-line no-constant-condition\n\twhile (true)\n\t{\n\t\tconst result = stats.page.results[stats.page.currentIndex];\n\n\t\tif (result !== undefined)\n\t\t{\n\t\t\t//const final = stats.page.currentIndex>=stats.page.results.length-1 && checker.numActiveLinks===0 && checker.numQueuedLinks===0;\n\n\t\t\tlogResult(result/*, final*/);\n\n\t\t\tstats.page.currentIndex++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t}\n};\n\n\n\nconst logSite = () =>\n{\n\tlet output = \"\";\n\n\tif (++stats.site.totalPages > 1)\n\t{\n\t\toutput += \"\\n\";\n\t}\n\n\toutput += white(\"\\nStarting recursive scan...\");\n\n\tlog(output);\n};\n\n\n\n// @todo number of unique/uncached links\n// @todo \"excluded links\" [from cli] doesn't make sense with a value of 0 when there're skipped links in the log\nconst logSiteMetrics = () =>\n{\n\tlet output = \"\";\n\toutput += gray(`\\nLinks found: ${stats.site.totalLinks}`);\n\toutput += gray(`\\nLinks skipped: ${stats.site.skippedLinks}`);\n\toutput += gray(`\\nLinks OK: ${stats.site.totalLinks - stats.site.skippedLinks - stats.site.brokenLinks}`);\n\n\tlet broken;\n\n\tif (stats.site.totalLinks > 0)\n\t{\n\t\tbroken = stats.site.brokenLinks>0 ? red : green;\n\t}\n\telse\n\t{\n\t\tbroken = gray;\n\t}\n\n\toutput += broken(`\\nLinks broken: ${stats.site.brokenLinks}`);\n\toutput += gray(\"\\nTime elapsed: \");\n\toutput += gray( humanizeDuration(Date.now() - stats.site.startTime, {largest:2, round:true}) );\n\n\tconst separator = gray(\"=\".repeat( longest(stripAnsi(output).split(\"\\n\")).length ));\n\n\tlog(`\\n${separator}${output}\\n${separator}\\n`);\n};\n\n\n\nconst run = () =>\n{\n\tObject.values(gaugeThemes).forEach(theme =>\n\t{\n\t\t//theme.preProgressbar = `\\n\\n${theme.preProgressbar}`;\n\t\ttheme.preSubsection = gray(\"—\");\n\t});\n\n\tgauge = new Gauge();\n\tstats = new Statistics();\n\n\tif (logOptions.recursive)\n\t{\n\t\tchecker = new SiteChecker(checkerOptions);\n\t}\n\telse\n\t{\n\t\tchecker = new HtmlUrlChecker(checkerOptions);\n\t}\n\n\tchecker\n\t.on(HTML_EVENT, (tree, robots, response, pageURL) =>\n\t{\n\t\tlogPage(pageURL);\n\t})\n\t.on(QUEUE_EVENT, () =>\n\t{\n\t\tlogProgress();\n\t})\n\t.on(JUNK_EVENT, link =>\n\t{\n\t\tstats.pushResult(link);\n\t\tlogProgress();\n\t\tlogResults();\n\t})\n\t.on(LINK_EVENT, link =>\n\t{\n\t\tstats.pushResult(link);\n\t\tlogProgress();\n\t\tlogResults();\n\t})\n\t.on(PAGE_EVENT, (error, pageURL) =>\n\t{\n\t\tif (error != null)\n\t\t{\n\t\t\t// HTML_EVENT will not have been called\n\t\t\tlogPage(pageURL);\n\n\t\t\tif (error.code<200 || error.code>299)\n\t\t\t{\n\t\t\t\tlog( red(`${error.name}: ${error.message}`) );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlog( gray(`${error.name}: ${error.message}`) );\n\t\t\t}\n\n\t\t\tprocess.exitCode = 1;\n\t\t}\n\t\t// If more than a total of one page will be scanned\n\t\telse if (logOptions.recursive || urls.length>1)\n\t\t{\n\t\t\tlogPageMetrics();\n\t\t\tlogProgress();\n\t\t\tstats.resetPage();\n\n\t\t\t// If nothing after current page\n\t\t\tif (checker.numPages === 1)\n\t\t\t{\n\t\t\t\tlogSiteMetrics();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlogSiteMetrics();\n\t\t}\n\t})\n\t.on(SITE_EVENT, () =>\n\t{\n\t\tlogSiteMetrics();\n\t\tstats.resetSite();\n\t})\n\t.on(END_EVENT, () =>\n\t{\n\t\t// @todo store multiple site stats in an array and log all site metrics at very end?\n\n\t\tif (supportsSemigraphics())\n\t\t{\n\t\t\t// Exit gracefully\n\t\t\tclearTimeout(spinner);\n\t\t\tgauge.disable();\n\t\t\tkeyScanner.release();\n\n\t\t\t// @todo https://github.com/mikaelbr/node-notifier/issues/174\n\t\t\tnotifier.notify({ message:\"Finished!\", title });\n\t\t}\n\t})\n\t.on(ERROR_EVENT, error =>\n\t{\n\t\tconsole.error(error);\n\n\t\t// eslint-disable-next-line no-process-exit\n\t\tprocess.exit(1);\n\t});\n\n\tif (logOptions.recursive)\n\t{\n\t\tlogSite();\n\t}\n\n\tif (supportsSemigraphics())\n\t{\n\t\t// Show pause message\n\t\ttogglePause(false);\n\n\t\tkeyScanner = scanKeys(key =>\n\t\t{\n\t\t\tif (key.parsed === \"space\")\n\t\t\t{\n\t\t\t\ttogglePause();\n\t\t\t}\n\t\t});\n\t}\n\telse\n\t{\n\t\tgauge.disable();\n\t}\n\n\ttry\n\t{\n\t\tchecker.pause();  // avoid auto-start\n\t\turls.forEach(url => checker.enqueue(new URL(url)));\n\t\tchecker.resume();  // start, if above didn't throw\n\t}\n\tcatch ({message})\n\t{\n\t\tconsole.error(message);\n\t\tprocess.exitCode = 1;\n\t}\n};\n\n\n\nconst spinnerInterval = () =>\n{\n\tspinner = setTimeout(() =>\n\t{\n\t\tgauge.pulse(pauseMessage);\n\t\tspinnerInterval();\n\t}, 50);\n};\n\n\n\nclass Statistics\n{\n\tconstructor()\n\t{\n\t\tthis.page = {};\n\t\tthis.site = {};\n\t\tthis.resetSite();\n\t}\n\n\tpushResult(link)\n\t{\n\t\tconst result = { displayed:true, link };\n\n\t\tconst hideCachedLink   = logOptions.hideCachedLinks   && link.get(IS_BROKEN)===false && link.get(HTTP_RESPONSE_WAS_CACHED);\n\t\tconst hideSkippedLink  = logOptions.hideSkippedLinks  && link.get(WAS_EXCLUDED);\n\t\tconst hideUnbrokenLink = logOptions.hideUnbrokenLinks && link.get(IS_BROKEN)===false;\n\n\t\tif (hideCachedLink || hideSkippedLink || hideUnbrokenLink)\n\t\t{\n\t\t\tthis.page.hiddenLinks++;\n\t\t\tthis.site.hiddenLinks++;\n\t\t\tresult.displayed = false;\n\t\t}\n\n\t\tif (link.get(IS_BROKEN))\n\t\t{\n\t\t\tthis.page.brokenLinks++;\n\t\t\tthis.site.brokenLinks++;\n\t\t\tprocess.exitCode = 1;\n\t\t}\n\t\telse if (link.get(WAS_EXCLUDED))\n\t\t{\n\t\t\tthis.page.skippedLinks++;\n\t\t\tthis.site.skippedLinks++;\n\t\t}\n\n\t\tthis.page.totalLinks++;\n\t\tthis.site.totalLinks++;\n\n\t\tif (logOptions.maintainLinkOrder)\n\t\t{\n\t\t\tthis.page.results[link.get(HTML_INDEX)] = result;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.page.results.push(result);\n\t\t}\n\t}\n\n\tresetPage()\n\t{\n\t\tthis.page.brokenLinks = 0;\n\t\tthis.page.currentIndex = 0;\n\t\tthis.page.hiddenLinks = 0;\n\t\tthis.page.results = [];\n\t\tthis.page.skippedLinks = 0;\n\t\t//this.page.startTime = Date.now();\n\t\tthis.page.totalLinks = 0;\n\t}\n\n\tresetSite()\n\t{\n\t\tthis.resetPage();\n\t\tthis.site.brokenLinks = 0;\n\t\tthis.site.hiddenLinks = 0;\n\t\tthis.site.skippedLinks = 0;\n\t\tthis.site.startTime = Date.now();\n\t\tthis.site.totalLinks = 0;\n\t\tthis.site.totalPages = 0;\n\t}\n}\n\n\n\nconst togglePause = pause =>\n{\n\tif (pause === undefined)\n\t{\n\t\tpause = !checker.isPaused;\n\t}\n\n\tif (pause)\n\t{\n\t\tchecker.pause();\n\n\t\tpauseMessage = `${yellow(\"PAUSED\")}${gray(\" — press space to resume\")}`;\n\t\tgauge.pulse(pauseMessage);\n\t\tclearTimeout(spinner);\n\t}\n\telse\n\t{\n\t\tchecker.resume();\n\n\t\tpauseMessage = gray(\"press space to pause\");\n\t\tspinner = spinnerInterval();\n\t}\n\n\tlogProgress();\n};\n\n\n\nexport default (args=process.argv) =>\n{\n\tconst filterLevel =\n\t[\n\t\t\"--filter-level:\",\n\t\t\"  0: clickable links\",\n\t\t\"  1: 0 + media, frames, meta refreshes\",\n\t\t\"  2: 1 + stylesheets, scripts, forms\",\n\t\t\"  3: 2 + metadata\"\n\t].join(\"\\n\");\n\n\tconst verbosity =\n\t[\n\t\t\"--verbosity:\",\n\t\t\"  0: broken links\",\n\t\t\"  1: 0 + unbroken links\",\n\t\t\"  2: 1 + skipped links\"\n\t].join(\"\\n\");\n\n\t/* eslint-disable sort-keys */\n\tconst optionator = require(\"optionator\")(\n\t{\n\t\tprepend: `${yellow(title.toUpperCase())}\\n\\n${green(\"Usage:\")} blc [options] url1 [url2 ...]`,\n\t\tappend: `${gray(filterLevel)}\\n\\n${gray(verbosity)}\\n`,\n\t\toptions:\n\t\t[\n\t\t\t{ heading:\"Common Options\" },\n\t\t\t{ option:\"recursive\",        alias:\"r\", type:\"Boolean\",  description:`Recursively scan (\"crawl\") the HTML document(s)`,                   default:\"false\" },\n\n\t\t\t{ heading:\"Filtering Options\" },\n\t\t\t{ option:\"exclude\",                     type:\"[String]\", description:\"Skip checking of links that match keywords/glob\" },\n\t\t\t{ option:\"exclude-external\", alias:\"e\", type:\"Boolean\",  description:\"Skip checking of external links\",                                   default:\"false\" },\n\t\t\t{ option:\"exclude-internal\", alias:\"i\", type:\"Boolean\",  description:\"Skip checking of internal links\",                                   default:\"false\" },\n\t\t\t{ option:\"filter-level\",                type:\"Number\",   description:\"Include checking of links by HTML properties\",                      default:`${DEFAULT_OPTIONS.filterLevel}` },\n\t\t\t{ option:\"follow\",           alias:\"f\", type:\"Boolean\",  description:\"Force-follow robot exclusions\",                                     default:\"false\" },\n\t\t\t{ option:\"include\",                     type:\"[String]\", description:\"Only check links that match keywords/glob\" },\n\n\t\t\t{ heading:\"Display Options\" },\n\t\t\t{ option:\"help\",             alias:\"h\", type:\"Boolean\",  description:\"Display this help text\",                                            default:\"false\" },\n\t\t\t{ option:\"ordered\",          alias:\"o\", type:\"Boolean\",  description:\"Maintain the order of links as they appear in their HTML document\", default:\"false\" },\n\t\t\t{ option:\"verbosity\",                   type:\"Number\",   description:\"The display verbosity level\",                                       default:\"1\" },\n\t\t\t{ option:\"version\",          alias:\"v\", type:\"Boolean\",  description:\"Display the app version\",                                           default:\"false\" },\n\n\t\t\t{ heading:\"Advanced Options\" },\n\t\t\t{ option:\"get\",              alias:\"g\", type:\"Boolean\",  description:\"Change request method to GET\",                                      default:\"false\" },\n\t\t\t{ option:\"host-requests\",               type:\"Number\",   description:\"Concurrent requests limit per host\",                                default:`${DEFAULT_OPTIONS.maxSocketsPerHost}` },\n\t\t\t{ option:\"requests\",                    type:\"Number\",   description:\"Concurrent requests limit \",                                        default:`${DEFAULT_OPTIONS.maxSockets}` },\n\t\t\t{ option:\"user-agent\",                  type:\"String\",   description:\"The user agent to use for checking links\" }\n\t\t]\n\t});\n\t/* eslint-disable sort-keys */\n\n\ttry\n\t{\n\t\tif (args === process.argv)\n\t\t{\n\t\t\targs = optionator.parseArgv(args);\n\t\t}\n\t\telse\n\t\t{\n\t\t\targs = optionator.parse(args);\n\t\t}\n\t}\n\tcatch (error)\n\t{\n\t\targs = error;\n\t}\n\n\tif (args instanceof Error)\n\t{\n\t\tconsole.error(args.message);\n\t\tprocess.exitCode = 1;\n\t}\n\telse if (args.help)\n\t{\n\t\tconsole.log( optionator.generateHelp() );\n\t}\n\telse if (args.version)\n\t{\n\t\tconsole.log(packageVersion);\n\t}\n\telse if (args._.length > 0)\n\t{\n\t\turls = args._;\n\t\tcheckerOptions = argsToOptions(args);\n\t\tlogOptions =\n\t\t{\n\t\t\thideCachedLinks:   args.verbosity < 2,\n\t\t\thideSkippedLinks:  args.verbosity < 2,\n\t\t\thideUnbrokenLinks: args.verbosity < 1,\n\t\t\tmaintainLinkOrder: args.ordered,\n\t\t\trecursive:         args.recursive === true  // default value is undefined\n\t\t};\n\n\t\trun();\n\t}\n\telse\n\t{\n\t\tconsole.error(\"At least one URL is required - see '--help'\");\n\t\tprocess.exitCode = 1;\n\t}\n};\n"],"file":"cli.js"}